@model ProductDetailsModel.ProductPriceModel
@using Nop.Core
@using Nop.Core.Domain.Catalog
@using Nop.Core.Domain.Tax
@using Nop.Core.Infrastructure
@using Nop.Web.Models.Catalog;
@using System.Globalization;
@using System.Text.RegularExpressions;
@{
    var dynamicPriceUpdate = EngineContext.Current.Resolve<CatalogSettings>().EnableDynamicPriceUpdate;
    var dynamicPriceUpdateAjax = EngineContext.Current.Resolve<CatalogSettings>().DynamicPriceUpdateAjax;
    var dynamicPriceUpdateSupported = dynamicPriceUpdate && !dynamicPriceUpdateAjax;

    string dynamicPricePattern = "(?<val>(\\d+[\\s\\,\\.]?)+)";
    string dynamicPriceReplacement = String.Format("<span class=\"price-val-for-dyn-upd-{0}\">${{val}}</span> ", Model.ProductId);  
}
@if (dynamicPriceUpdateSupported)
{
    <script type="text/javascript">
        var priceValForDynUpd_@(Model.ProductId) = @(((float)(Model.PriceValue != Model.PriceWithDiscountValue ? Model.PriceWithDiscountValue : Model.PriceValue)).ToString(new CultureInfo("en-US")));
    </script>
}
@if (Model.CallForPrice)
{
    <span class="btn btn-default btn-commoninfo">@T("Products.CallForPrice")</span>
}
else
{
        @Model.CurrencyCode <text>&nbsp;</text> @Html.Raw(Model.Price)

    }

