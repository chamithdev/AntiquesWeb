@model RegisterModel
@using Nop.Web.Models.Customer;
@{
    Layout = "~/Views/Shared/_ColumnsOne.cshtml";

    //title
    Html.AddTitleParts(T("PageTitle.Register").Text);
}
@if (Model.CountryEnabled && Model.StateProvinceEnabled)
{
    <script type="text/javascript">
        $(function () {
            $("#@Html.FieldIdFor(model => model.CountryId)").change(function () {
                var selectedItem = $(this).val();
                var ddlStates = $("#@Html.FieldIdFor(model => model.StateProvinceId)");
                var statesProgress = $("#states-loading-progress");
                statesProgress.show();
                $.ajax({
                    cache: false,
                    type: "GET",
                    url: "@(Url.RouteUrl("GetStatesByCountryId"))",
                    data: { "countryId": selectedItem, "addSelectStateItem": "true" },
                    success: function (data) {
                        ddlStates.html('');
                        $.each(data, function (id, option) {
                            ddlStates.append($('<option></option>').val(option.id).html(option.name));
                        });
                        statesProgress.hide();
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        alert('Failed to retrieve states.');
                        statesProgress.hide();
                    }
                });
            });
        });

      
    </script>
}
<script>
    $(function () {

        $('#btnSubmit').click(function (event) {
            if ($('#chkTerms').is(':checked')) {
                return true;
            }
            event.preventDefault();
            alert('Please agree to terms and conditions');
            return false;
        })

    }
          )
</script>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="section-pannel">
        <div class="row margin-top30">
            <div class="col-sm-6 col-md-7 col-lg-12">
                <div class="form-text-lg">
                    @{
    var validationSummary = Html.ValidationSummary(true);
                    }
                    @if (!MvcHtmlString.IsNullOrEmpty(validationSummary))
                    {
                        <div class="message-error">@validationSummary</div>
                    }
                    <div class="form-lg">
                        @*<div class="form-lg">
                                Personal Message
                                <input type="text" class="js-default-val-text" defaultval="" value="" />
                            </div>*@

                        <strong>
                            User Account
                        </strong><br />
                        Email : <span class="mandatory">*</span><br />
                        @Html.EditorFor(model => model.Email, new { @class = "js-default-val-text margin-bottom10 mandatory-input" })
                        @Html.RequiredHint()
                        @Html.ValidationMessageFor(model => model.Email)
                        <br />
                        @if (Model.UsernamesEnabled)
                        {
                            <text>Please enter user name :</text>
                            @Html.EditorFor(model => model.Username, new { @class = "js-default-val-text margin-bottom10 mandatory-input" })
                            @Html.RequiredHint()
                            @Html.ValidationMessageFor(model => model.Username)
                            if (Model.CheckUsernameAvailabilityEnabled)
                            {
                                @Html.Partial("_CheckUsernameAvailability")
                            }

                            <br />


                        }

                        Please enter password :<br />
                        @Html.EditorFor(model => model.Password, new { @class = "js-default-val-text margin-bottom10 mandatory-input" })
                        @Html.RequiredHint()
                        @Html.ValidationMessageFor(model => model.Password)
                        <br />
                        @*<p><strong>Your unique member number is 031</strong></p>*@
                        <p>Do you agree to our member&nbsp;<a href="#">Terms &amp; Conditions</a>&nbsp;Please Tick Box&nbsp; Yes&nbsp;<input type="checkbox"  id="chkTerms" />  </p>
                        First Name :  <span class="mandatory">*</span><br />
                        @Html.EditorFor(model => model.FirstName, new { @class = "js-default-val-text margin-bottom10 mandatory-input" })
                        @Html.RequiredHint()
                        @Html.ValidationMessageFor(model => model.FirstName)
                     
                        <br />
                        Last Name : <span class="mandatory">*</span><br />
                        @Html.EditorFor(model => model.LastName, new { @class = "js-default-val-text margin-bottom10 mandatory-input" })
                        @Html.RequiredHint()
                        @Html.ValidationMessageFor(model => model.LastName)
                        <br />
                        @if (Model.CompanyEnabled)
                        {
                            <text>Business Name : </text><span class="mandatory">*</span><br />
                            @Html.EditorFor(model => model.Company, new { @class = "js-default-val-text margin-bottom10 mandatory-input" })
                            if (Model.CompanyRequired)
                            {
                                @Html.RequiredHint()
                            }
                            @Html.ValidationMessageFor(model => model.Company)

                        }
                        <br />
                        Tel.
                        <br />
                        @Html.EditorFor(model => model.Phone, new { @class = "js-default-val-text margin-bottom10 mandatory-input" })
                        @if (Model.PhoneRequired)
                        {
                            @Html.RequiredHint()
                        }
                        @Html.ValidationMessageFor(model => model.Phone)


                        <br />

                        @if (Model.CustomerAttributes.Count > 0)
                        {
                            @Html.Partial("_CustomerAttributes", Model.CustomerAttributes)
                        }
                           @*Address : <br />
                        @Html.EditorFor(model => model.Address, new { @class = "js-default-val-text margin-bottom10 mandatory-input" })
                        <br />
                        Website :<br />
                        <input type="text" class="js-default-val-text margin-bottom10 mandatory-input" defaultval="" value="" />
                        <br />
                        Tel :

                        <br />
                        Mobile :<br />
                        @Html.EditorFor(model => model.Mobile, new { @class = "js-default-val-text margin-bottom10 mandatory-input" })
                        <br />
                        Skype : <br />
                        @Html.EditorFor(model => model.Skype, new { @class = "js-default-val-text margin-bottom10 mandatory-input" })
                        <br />*@
                        <p></p>
                        <input type="submit" value="Submit" id="btnSubmit" class="btn btn-primary" />
                        <p></p>
                        <div class="alert alert-success msg">
                            <p>We will email you when your account has been activated, Thank you for joining </p>
                        </div>
                    </div>


                </div>

            </div>


        </div>
    </div>




}