@model LoginModel
@using Nop.Web.Models.Customer;
@using Nop.Core;
@using Nop.Core.Infrastructure;
@{
    Layout = "~/Views/Shared/_ColumnsOne.cshtml";

    //title
    Html.AddTitleParts(T("PageTitle.Login").Text);

    //register URL with return URL (if specified)
    var registerUrl = Url.RouteUrl("Register");
    if (!String.IsNullOrEmpty(this.Context.Request.QueryString["returnUrl"]))
    {
        var webHelper = EngineContext.Current.Resolve<IWebHelper>();
        registerUrl = webHelper.ModifyQueryString(registerUrl, "returnurl=" + HttpUtility.UrlEncode(this.Context.Request.QueryString["returnUrl"]), null);
    }
}



<div class="row">
    <div class="col-md-5 col-md-offset-2">
        <section class="signin-panel">
            <h2>Sign in </h2>

            @using (Html.BeginForm())
                {
                    
                    var validationSummary = Html.ValidationSummary(true, T("Account.Login.Unsuccessful").Text);
                    if (!MvcHtmlString.IsNullOrEmpty(validationSummary))
                    {
                        <div class="alert alert-danger" role="alert"> <strong>Oops!</strong> @validationSummary </div>
                    }

                    if (Model.UsernamesEnabled)
                    {
                <div class="form-group">
                    <label>User Name</label>
                    
                           @Html.TextBoxFor(m => m.Username, new { @class = "form-control form-control-custom1", autofocus = "autofocus" })
                           @Html.ValidationMessageFor(m => m.Username)></div>
                    }else
                    {
                <div class="form-group">
                    <label>Email</label>
                    
                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control form-control-custom1", autofocus = "autofocus" })
                    @Html.ValidationMessageFor(m => m.Email)
                </div>
                    }
                <div class="form-group">
                    <label>Password</label>
                    @Html.PasswordFor(m => m.Password, new { @class = "form-control form-control-custom1 margin-bottom10" })
                    @Html.ValidationMessageFor(m => m.Password)
                </div>

                <div class="checkbox">
                    <label>
                        @Html.CheckBoxFor(m => m.RememberMe, new { @class = "checkbox" }) Remember Me
                    </label>
                </div>
                <hr />
                <div class="row">
                    <div class="col-xs-6">
                        <button type="submit" class="btn btn-default btn-login " value="@T("Account.Login.LoginButton")">Submit</button>
                    </div>
                    <div class="col-xs-6">
                        @Html.RouteLink("Forgot Password?", "PasswordRecovery")
                    </div>
                </div>


                }



            <div class="login-wrap">

                @*@using (Html.BeginForm())
                    {
                        var validationSummary = Html.ValidationSummary(true, T("Account.Login.Unsuccessful").Text);
                        if (!MvcHtmlString.IsNullOrEmpty(validationSummary))
                        {
                            <div class="message-error">@validationSummary</div>
                        }
                        if (Model.UsernamesEnabled)
                        {
                            <div class="inputs">

                                <label class="control-label">Username</label>
                                @Html.TextBoxFor(m => m.Username, new { @class = "form-control", autofocus = "autofocus" })
                                @Html.ValidationMessageFor(m => m.Username)
                            </div>
                        }
                        else
                        {
                            <div class="inputs">

                                <label class="control-label">Email</label>
                                @Html.TextBoxFor(m => m.Email, new { @class = "form-control", autofocus = "autofocus" })
                                @Html.ValidationMessageFor(m => m.Email)
                            </div>
                        }


                        <label class="control-label">Password</label>
                        @Html.PasswordFor(m => m.Password, new { @class = "form-control margin-bottom10" })
                        @Html.ValidationMessageFor(m => m.Password)
                        <label class="control-label">Remember Me</label>
                        @Html.CheckBoxFor(m => m.RememberMe, new { @class = "checkbox" })

                        @Html.RouteLink("Forgot Password?", "PasswordRecovery")
                        <input class="btn btn-default btn-info float-right" type="submit" value="@T("Account.Login.LoginButton")" />

                    }*@
            </div>
        </section>
    </div>
    <div class="col-md-4 ">
        <div class="createnew-panel">
            <h2>Apply to join as a Supplier</h2>
            <input type="button" class="btn btn-default btn-create-account m-t" onclick="location.href='@registerUrl'" value="Create New Account" />
        </div>
    </div>
</div>

<div id="body-content">
    <div class="container">
        <div class="row">
        </div>
    </div>
</div>