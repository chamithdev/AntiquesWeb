@model RegisterModel
@using Nop.Web.Models.Customer;
@{
    Layout = "~/Views/Shared/_ColumnsOne.cshtml";

    //title
    Html.AddTitleParts(T("PageTitle.Register").Text);
}
@if (Model.CountryEnabled && Model.StateProvinceEnabled)
{
    <script type="text/javascript">
        $(function () {
            $("#@Html.FieldIdFor(model => model.CountryId)").change(function () {
                var selectedItem = $(this).val();
                var ddlStates = $("#@Html.FieldIdFor(model => model.StateProvinceId)");
                var statesProgress = $("#states-loading-progress");
                statesProgress.show();
                $.ajax({
                    cache: false,
                    type: "GET",
                    url: "@(Url.RouteUrl("GetStatesByCountryId"))",
                    data: { "countryId": selectedItem, "addSelectStateItem": "true" },
                    success: function (data) {
                        ddlStates.html('');
                        $.each(data, function (id, option) {
                            ddlStates.append($('<option></option>').val(option.id).html(option.name));
                        });
                        statesProgress.hide();
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        alert('Failed to retrieve states.');
                        statesProgress.hide();
                    }
                });
            });
        });

      
    </script>
}
<script>
    $(function () {

        $('#btnSubmit').click(function (event) {
            if ($('#chkTerms').is(':checked')) {
                return true;
            }
            event.preventDefault();
            alert('Please agree to terms and conditions');
            return false;
        })

    }
          )
</script>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()     
    var validationSummary = Html.ValidationSummary(true);
    if (!MvcHtmlString.IsNullOrEmpty(validationSummary))
    {
        <div class="message-error">@validationSummary</div>
    }
    <div class="row">
        <div class="col-md-8 col-md-offset-2">
            <div class="form-horizontal">
                <div class="form-group">
                    <label class="col-sm-2 control-label">Email :</label>
                    <div class="col-sm-10">
                        <input type="text" class="form-control form-required" name="Email" id="Email" placeholder="Email">
                     
                        @Html.ValidationMessageFor(model => model.Email)
                    </div>
                </div>
                @if (Model.UsernamesEnabled)
                {
                    <div class="form-group">
                        <label class="col-sm-2 control-label"><text>User Name :</text></label>
                        <div class="col-sm-10">
                            <input type="text" class="form-control form-required" name="Username" id="Username" placeholder="User name">
                            @Html.ValidationMessageFor(model => model.Username)
                            if (Model.CheckUsernameAvailabilityEnabled)
                            {
                            @Html.Partial("_CheckUsernameAvailability")
                            }

                        </div>
                    </div>
                    
                }



                <div class="form-group">
                    <label for="inputPassword3" class="col-sm-2 control-label">Password :</label>
                    <div class="col-sm-10">        
                        <input type="password" name="Password" class="form-control form-required" id="Password" placeholder="">                
                        @*@Html.EditorFor(model => model.Password, new { @class = "form-control form-required", @d = "inputPassword3" })*@                       
                        @Html.ValidationMessageFor(model => model.Password)
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-sm-offset-2 col-sm-10">
                        <div class="checkbox">
                            <label>
                                <input type="checkbox" id="chkTerms"> Do you agree to our member <a href="/home/TermsAndConditions" target="_blank">Terms & Conditions</a> Please Tick Box  Yes
                            </label>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <label for="inputPassword3" class="col-sm-2 control-label">First Name :</label>
                    <div class="col-sm-10">
                        <input type="text" class="form-control form-required" name="FirstName" id="FirstName" placeholder="First name">   
                        @Html.ValidationMessageFor(model => model.FirstName)
                    </div>
                </div>
                <div class="form-group">
                    <label for="inputPassword3" class="col-sm-2 control-label">Last Name :</label>
                    <div class="col-sm-10">
                        <input type="text" class="form-control form-required" name="LastName" id="LastName" placeholder="Last name">
                        @Html.ValidationMessageFor(model => model.LastName)
                    </div>
                </div>
                @if (Model.CompanyEnabled)
                        {
                <div class="form-group">
                    <label for="inputPassword3" class="col-sm-2 control-label">Company :</label>
                    <div class="col-sm-10">
                        <input type="text" class="form-control form-required" name="Company" id="Company" placeholder="Company">
                        @Html.ValidationMessageFor(model => model.Company)
                    </div>
                </div>
                 }
                <div class="form-group">
                    <label for="inputPassword3" class="col-sm-2 control-label">Tel :</label>
                    <div class="col-sm-5">
                        @*<input type="password" class="form-control" id="inputPassword3" placeholder="">*@
                       
                        @if (Model.PhoneRequired)
                        {
                            <input type="text" class="form-control form-required" name="Phone" id="Phone" placeholder="Phone">
                        }
                        else
                        {
                            <input type="text" class="form-control" name="Phone" id="Phone" placeholder="Phone">
                        }
                        @Html.ValidationMessageFor(model => model.Phone)


                    </div>
                </div>
                @if (Model.CustomerAttributes.Count > 0)
                {
                    @Html.Partial("_CustomerAttributes", Model.CustomerAttributes)
                }
                @*<div class="form-group">
                    <label for="inputPassword3" class="col-sm-2 control-label">Website :</label>
                    <div class="col-sm-5">
                        <input type="password" class="form-control" id="inputPassword3" placeholder="">
                    </div>
                </div>

                <div class="form-group">
                    <label for="inputPassword3" class="col-sm-2 control-label">Address :</label>
                    <div class="col-sm-5">
                        <input type="password" class="form-control" id="inputPassword3" placeholder="">
                    </div>
                </div>

                <div class="form-group">
                    <label for="inputPassword3" class="col-sm-2 control-label">Mobile :</label>
                    <div class="col-sm-5">
                        <input type="password" class="form-control" id="inputPassword3" placeholder="">
                    </div>
                </div>

                <div class="form-group">
                    <label for="inputPassword3" class="col-sm-2 control-label">Skype :</label>
                    <div class="col-sm-5">
                        <input type="password" class="form-control" id="inputPassword3" placeholder="">
                    </div>
                </div>*@
                    @if (Model.DisplayIsVendor)
                 {
                <div class="form-group">
                    <div class="col-sm-offset-2 col-sm-10">
                        <div class="checkbox">
                         
                                <label>
                                    @*<input type="checkbox" name="IsVendor" id="IsVendor" />*@ @Html.EditorFor(model => model.IsVendor) I am a Vendor                           
                                </label>
                                
                               
                          
                            
                        </div>
                    </div>
                </div>
               }
               
                <div class="form-group">
                    <div class="col-sm-offset-2 col-sm-10">
                        <button type="submit" id="btnSubmit" class="btn btn-default btn-submit">Register By Clicking Here</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    





}