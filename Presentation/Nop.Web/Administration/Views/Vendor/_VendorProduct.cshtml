@model List<Nop.Admin.Models.Vendors.VendorModel.VenddorProductModel>
@{
    Layout = null;
    var defaultGridPageSize = EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().DefaultGridPageSize;
    var total = (Model.Count > 0 ? Model[0].TotalCount : 0);
    var pages = total / defaultGridPageSize;
    if((total % defaultGridPageSize) >0 )
    {
        pages += 1;
    }
    var pagesList = new List<SelectListItem>();
    var current = Convert.ToInt32(ViewBag.CurrentPage) + 1;
   
    for (int i = 0; i <= pages; i++)
	{
        var text = "-";
        if (i > 0)
        {
            text = i.ToString();
        }


        if (i != current)
        {
            pagesList.Add(new SelectListItem { Text = text, Value = i.ToString() });
        }
            
	}
   
    //pagesList.Add(1);
    //pagesList.Add(2);
    
  
    
}
@foreach (Nop.Admin.Models.Vendors.VendorModel.VenddorProductModel pm in Model)
{
    <li class="ui-state-default@(pm.CanReOrder ? "" : " disable-sort-item")" id="@pm.ProductId" data-order="@pm.DisplayOrder">
        <div class="thumbnail-vendor thumbnail-large">
            <div class="thum-img">
                <a href="@Url.Action("editib", "product", new { area = "admin",id=@pm.ProductId }, null)">  <img alt="" src="@pm.ProductPicture.PictureUrl" title="@pm.ProductName" /></a>
            </div>
            <div class="caption">
                <h3>
                    <label type="text" defaultval="Title" value="">@pm.ProductName</label>
                </h3>
                <p>
                    <label type="text" defaultval="Date" value="" class="js-default-val-text">@pm.CircaDate</label>
                    <br />
                    <label type="text" defaultval="£Price" value="" class="js-default-val-text">@pm.ProductPrice</label>
                </p>
                <p>
                    @if (pagesList.Count >1 && pm.CanReOrder)
                    {
                        <text>Move To Page :</text>@Html.DropDownList("MoveTo", new SelectList(pagesList, "Value", "Text"), new { @id = pm.Id, @class = "form-control", @style = "z-index:1000;", @onchange = "MoveToPage(" + @pm.ProductId + ",$(this).val())" }) ;
                        <br />
                       
                    }
                    @if (!pm.CanReOrder)
                    {
                        <input type="button" value="Relist" class="btn btn-submit" onclick="InStock(@pm.ProductId)" />
                    }
                    else
                    {
                        <input type="button" value="Mark as Sold Out" class="btn btn-submit" onclick="Soldout(@pm.ProductId)" />
                    }
                    
                </p>
            </div>
        </div>
    </li>

}




